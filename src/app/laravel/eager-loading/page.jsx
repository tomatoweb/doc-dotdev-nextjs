import { Typography } from "@mui/material";
import CodeBlock from "@/app/components/CodeBlock";
import Image from "next/image";

const text = 
`public function paginateProfiles(int $page, int $limit): PaginationInterface
{
    return $this->paginator->paginate(
        $this->createQueryBuilder('r')
        ->select('r', 'p')
        ->leftJoin('r.pool', 'p'),
        $page,
        $limit
    );
}`;

const page = () => {
  return (
    <div>
      <Typography variant="h6" sx={{fontWeight: 500, marginBottom:4}}>
        üöÄ Doctrine n+1 select problem
      </Typography>
      <Typography variant="body1" sx={{fontWeight: 500, marginBottom:4}}>
        Par d√©faut, Doctrine fetch la table de la cl√© √©trang√®re √† la demande.
        Ici on voit un select (n+1) pour chaque pool, car on demande le pool name dans la vue.
        Ceci est pr√©vu par Doctrine pour √©viter de fetcher la table de la cl√© √©trang√®re Pool pour rien
         dans le cas o√π on affiche pas les infos du pool (cas du proxy). 
      </Typography>
      <Image
        width={0}
        height={0}
        sizes="100vw"
        style={{width: '100%', height: 'auto'}} 
        className="h-auto rounded-lg" 
        src="/doctrine1.png" 
        alt=""
      />      
      <Typography variant="body1" sx={{fontWeight: 500, marginBottom:4, marginTop: 4}}>
      Pour √©viter ces select on fera un leftjoin dans le QueryBuilder, on aura alors une seule requ√™te SQL avec un join
      </Typography>
      <CodeBlock text={text} />
      <Image
        width={0}
        height={0}
        sizes="100vw"
        style={{width: '100%', height: 'auto'}} 
        className="h-auto rounded-lg mb-10" 
        src="/doctrine2.png" 
        alt=""
      />
    </div>
  )
}
export default page